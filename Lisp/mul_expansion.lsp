(defun mul_expansion_list (E W k)
	(setf F '())
	(setf j 0)
	(do ( (i 0 (setq i (1+ i))) ) ((listp (nth i E))  )
		(setf F (append F (list (nth i E))))
		(setf j (+ j 1))
	)
	(setf H (mul_poly F (power_poly W k)))
	(if (> (length (nth j E)) 0) 
		(return-from mul_expansion_list (addition H (mul_expansion_list (nth j E) W (+ k 1))))
		(return-from mul_expansion_list H)
	)
)

(defun mul_expansion_v1 (E W)
	(mul_expansion_list E W 0)
)

(defun mul_expansion (U V W)
	(setf E (expansion U V))
	(mul_expansion_list E W 0)
)